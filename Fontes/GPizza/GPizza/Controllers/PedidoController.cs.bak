using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using static GPizza.Funcoes;
using Microsoft.AspNetCore.Authorization;
//Importando package para session
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc.Filters;

namespace GPizza.Controllers
{
    public class PedidoController : Controller
    {
        public IActionResult Index()
        {
            return View();
        }

        [AllowAnonymous]
        [HttpGet]
        public JsonResult PesquisarProduto(string termo)
        {

            Models.Produto p = new Models.Produto();
            List<Models.Produto> lista = p.Pesquisar(termo);
            return Json(lista);
        }

        [Filtro]
        [HttpPost]
        public JsonResult Gravar([FromBody] Dictionary<string, object> dados)
        {
            string msg = "";
            bool operacao = false;           
            Models.Pedido p = new Models.Pedido();
            p.Ped_codigo = Convert.ToInt32(dados["ped_codigo"]);        
            p.Cliente = new Models.Cliente().getCliente(Convert.ToInt32(dados["cli_codigo"]));
            //object objFun = (Models.Funcionario)dados["funcionario"];
            if (HttpContext.Session.GetString("fun_codigo")!=null)
                p.Funcionario = new Models.Funcionario().getFuncionario(Convert.ToInt32(HttpContext.Session.GetString("fun_codigo")));  
            p.Ped_data = getDateTime((string)dados["ped_data"]);         
            p.Ped_desconto = Convert.ToDouble(dados["ped_desconto"]);
            p.Ped_valor_total = Convert.ToDouble(dados["ped_valor_total"]);
            p.Ped_observacao = dados["ped_observacao"].ToString();

            Newtonsoft.Json.Linq.JArray items = (Newtonsoft.Json.Linq.JArray)dados["items"];

            p.Itens = new List<Models.PedidoItem>();

            foreach (Newtonsoft.Json.Linq.JObject item in items)
            {
                Models.PedidoItem i = new Models.PedidoItem();
                i.Produto = new Models.Produto();
                i.Produto.Pro_codigo = item.Value<int>("pro_codigo");
                i.Pi_quant = item.Value<int>("pi_quant");
                i.Pi_valor_unit = item.Value<double>("pi_valor_unit");
                i.Pi_valor_tot = item.Value<double>("pi_valor_tot");
                p.Itens.Add(i);
            }
            operacao = p.Gravar(out msg);

            return Json(new
            {
                operacao = operacao,
                msg = msg
            });
        }
    }
}